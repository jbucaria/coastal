import React, { useState } from 'react'
import {
  View,
  Text,
  TouchableOpacity,
  ActivityIndicator,
  StyleSheet,
  Alert,
  Modal,
} from 'react-native'
import * as Print from 'expo-print'
import * as Sharing from 'expo-sharing'
import * as FileSystem from 'expo-file-system'
import { Asset } from 'expo-asset'
import Pdf from 'react-native-pdf'

// Function to load and convert the logo to Base64 from assets/images/logo.png
const getLogoBase64 = async () => {
  const asset = Asset.fromModule(require('../../assets/images/logo.png'))
  await asset.downloadAsync()
  const base64 = await FileSystem.readAsStringAsync(asset.localUri, {
    encoding: FileSystem.EncodingType.Base64,
  })
  return base64
}

// Function to generate the HTML for the report
const generateReportHTML = logoBase64 => {
  const reportText = `Inspection Report

Project: Coastal Restoration Services
Date: August 14, 2024

Summary:
• Technician assessed water intrusion in multiple areas.
• Affected rooms: Living Room, Bedroom.
• Moisture readings were taken and proper mitigation performed.
• Affected areas were treated with an antimicrobial agent and monitored until dry.

Recommendations:
• Continue monitoring moisture levels.
• Schedule follow-up inspection if necessary.

Thank you for choosing Coastal Restoration Services.`

  const photoPlaceholderBase64 =
    'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAIAAAD8GO2jAAAAAXNSR0IArs4c6QAAAlBJREFUWEft1j0xBEEUhK8nzIH4JSRgrLLCUCsgliJkAjtH/VyP2IVIpX8DY24PgCzIkGiIPoI3Qo9oAlmh1PhkIhy45/bt/vfbubO+d9Pme/zNm53sm0NQqy7R4/V8Dq4CdgD/gH+FQ4Af4fYIEBqVAdgejQzvdIAD8CngBvghAWrAT64FKAA/ZgCgBlMH1AqgXPpW58HSAJ1mvm9AIwEJYq1V2YIB+kmQCS6NhdwCbAF9k2RHGagCAc70OujS8QaZUhAGf5N5E9FeYFngMT4AR4irDVOoyACD4PrE+U0FqB5KC6b/06TClAk6ry4F2ISYhkOj/DVB47j/ed/+BRWEFTLTP9AYZ0gG+AF14lpx3t+3hwAAAAASUVORK5CYII='
  const photos = [photoPlaceholderBase64, photoPlaceholderBase64]
  const photosHTML = photos
    .map(
      photo =>
        `<img src="data:image/png;base64,${photo}" style="width:200px; margin:10px;" />`
    )
    .join('')

  return `
    <html>
      <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <style>
          body {
            font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
            margin: 40px;
            color: #333;
            line-height: 1.6;
          }
          .header {
            text-align: center;
            border-bottom: 2px solid #0073BC;
            padding-bottom: 20px;
            margin-bottom: 30px;
          }
          .header img {
            max-width: 200px;
            margin-bottom: 10px;
          }
          .business-info {
            font-size: 14px;
            margin-top: 10px;
            color: #555;
          }
          h1 {
            color: #0073BC;
            margin-bottom: 10px;
          }
          .report-section {
            margin-bottom: 30px;
          }
          .report-section h2 {
            color: #0073BC;
            margin-bottom: 10px;
            border-bottom: 1px solid #0073BC;
            padding-bottom: 5px;
          }
          .report-section pre {
            background-color: #f7f7f7;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            white-space: pre-wrap;
          }
          .photos {
            text-align: center;
          }
          .photos img {
            border: 1px solid #ccc;
            border-radius: 4px;
            margin: 10px;
          }
          .footer {
            text-align: center;
            font-size: 12px;
            color: #777;
            margin-top: 40px;
            border-top: 1px solid #ddd;
            padding-top: 10px;
          }
        </style>
      </head>
      <body>
        <div class="header">
          <img src="data:image/png;base64,${logoBase64}" alt="Logo" />
          <h1>Coastal Restoration Services</h1>
          <div class="business-info">
            904 CHESAPEAKE DR, ODESSA FL 33556<br/>
            813-918-4210
          </div>
        </div>
        <div class="report-section">
          <h2>Inspection Report</h2>
          <pre>${reportText}</pre>
        </div>
        <div class="report-section photos">
          <h2>Photos</h2>
          ${photosHTML}
        </div>
        <div class="footer">
          Report generated by Coastal Restoration Services
        </div>
      </body>
    </html>
  `
}

const generatePDF = async () => {
  try {
    const logoBase64 = await getLogoBase64()
    const html = generateReportHTML(logoBase64)
    const { uri } = await Print.printToFileAsync({ html })
    console.log('PDF generated at:', uri)
    return uri
  } catch (error) {
    console.error('Error generating PDF:', error)
    throw error
  }
}

const ViewReportScreen = () => {
  const [pdfUri, setPdfUri] = useState(null)
  const [isGenerating, setIsGenerating] = useState(false)
  const [isViewerVisible, setIsViewerVisible] = useState(false)

  const handleGenerateReport = async () => {
    setIsGenerating(true)
    try {
      const uri = await generatePDF()
      setPdfUri(uri)
      Alert.alert('Success', 'PDF report generated.')
    } catch (error) {
      Alert.alert('Error', 'Failed to generate PDF report.')
    }
    setIsGenerating(false)
  }

  const handleViewReport = () => {
    if (pdfUri) {
      setIsViewerVisible(true)
    } else {
      Alert.alert('No Report', 'Please generate a report first.')
    }
  }

  const handleShareReport = async () => {
    if (pdfUri) {
      const available = await Sharing.isAvailableAsync()
      if (available) {
        await Sharing.shareAsync(pdfUri)
      } else {
        Alert.alert('Share Report', 'Sharing is not available on this device.')
      }
    } else {
      Alert.alert('No Report', 'Please generate a report first.')
    }
  }

  return (
    <View style={styles.container}>
      <Text style={styles.headerText}>View Report</Text>
      <TouchableOpacity onPress={handleGenerateReport} style={styles.button}>
        {isGenerating ? (
          <ActivityIndicator color="#fff" />
        ) : (
          <Text style={styles.buttonText}>Generate PDF Report</Text>
        )}
      </TouchableOpacity>
      {pdfUri && (
        <View style={styles.actionButtons}>
          <TouchableOpacity
            onPress={handleViewReport}
            style={styles.buttonSecondary}
          >
            <Text style={styles.buttonText}>View Report</Text>
          </TouchableOpacity>
          <TouchableOpacity
            onPress={handleShareReport}
            style={styles.buttonSecondary}
          >
            <Text style={styles.buttonText}>Share Report</Text>
          </TouchableOpacity>
        </View>
      )}
      <Modal visible={isViewerVisible} animationType="slide">
        <View style={{ flex: 1 }}>
          <TouchableOpacity
            style={styles.closeButton}
            onPress={() => setIsViewerVisible(false)}
          >
            <Text style={styles.closeButtonText}>Close</Text>
          </TouchableOpacity>
          {pdfUri ? (
            <Pdf
              source={{ uri: pdfUri, cache: true }}
              style={styles.pdf}
              onError={error => {
                console.log('PDF rendering error:', error)
                Alert.alert('Error', 'Failed to display PDF.')
              }}
            />
          ) : null}
        </View>
      </Modal>
    </View>
  )
}

export default ViewReportScreen

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    justifyContent: 'center',
    backgroundColor: '#fff',
  },
  headerText: {
    fontSize: 24,
    textAlign: 'center',
    marginBottom: 20,
    color: '#0073BC',
  },
  button: {
    backgroundColor: '#0073BC',
    padding: 15,
    borderRadius: 5,
    alignItems: 'center',
  },
  buttonSecondary: {
    backgroundColor: '#F36C21',
    padding: 15,
    borderRadius: 5,
    alignItems: 'center',
    marginTop: 10,
    width: '48%',
  },
  buttonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: '600',
  },
  actionButtons: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: 20,
  },
  closeButton: {
    backgroundColor: '#0073BC',
    padding: 10,
    alignItems: 'center',
  },
  closeButtonText: {
    color: '#fff',
    fontSize: 16,
  },
  pdf: {
    flex: 1,
    width: '100%',
  },
})
